{"version":3,"sources":["components/FriendCard/index.js","components/ListHead/index.js","components/List/index.js","components/Wrapper/index.js","components/Title/index.js","components/SearchForm/index.js","components/Navbar/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","position","shirtNumber","country","age","styles","iconS","fontSize","color","iconD","headD","imgD","headS","backgroundColor","ListHead","style","onClick","sortByName","href","sortByNameD","sortByPosition","sortByPositionD","sortByShirt","sortByShirtD","sortByCountry","sortByCountryD","sortByAge","sortByAgeD","List","children","Wrapper","titleS","fontFamily","fontWeight","marginTop","Title","buttonS","marginLeft","searchS","formS","SearchForm","htmlFor","value","search","onChange","handleInputChange","list","type","placeholder","id","handleFormSubmit","navbarStyle","background","display","imagen","Navbar","App","state","players","results","compare","a","b","bandA","fullName","toUpperCase","bandB","comparison","sort","console","log","setState","nationality","event","target","preventDefault","filter","friend","lastName","this","breeds","length","map","imageURL","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8ba94ff.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// const styles = {\n//   iconS: {\n//     fontSize: '24px'\n//   }\n// }\n\nfunction FriendCard(props) {\n  return (\n    <tr>\n      <td><img className='avatar img-thumbnail' alt={props.name} src={props.image} /></td>\n      <td>{props.name}</td>\n      <td>{props.position}</td>\n      <td>{props.shirtNumber}</td>\n      <td>{props.country}</td>\n      <td>{props.age}</td>\n    </tr>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst styles = {\n  iconS: {\n    fontSize: '20px',\n    color: 'lightgreen'\n  },\n  iconD: {\n    fontSize: '20px',\n    color: 'coral'\n  },\n  headD: {\n    color: 'gold'\n  },\n  imgD: {\n    fontSize: '20px'\n  },\n  headS: {\n    backgroundColor: 'rgba(26, 26, 131, 1)'\n  }\n}\n\nfunction ListHead(props) {\n  return (\n    <tr style={styles.headS}>\n      <th style={styles.headD}><i className='fas fa-futbol' style={styles.imgD}></i> Player</th>\n      <th style={styles.headD}>Name <i className='fas fa-chevron-circle-up zoomOut' style={styles.iconS} onClick={() => props.sortByName()} href=''></i> <i className='fas fa-chevron-circle-down zoomIn' style={styles.iconD} onClick={() => props.sortByNameD()} href=''></i></th>\n      <th style={styles.headD}>Position <i className='fas fa-chevron-circle-up zoomOut' style={styles.iconS} onClick={() => props.sortByPosition()} href=''></i> <i className='fas fa-chevron-circle-down zoomIn' style={styles.iconD} onClick={() => props.sortByPositionD()} href=''></i></th>\n      <th style={styles.headD}>Shirt # <i className='fas fa-chevron-circle-up zoomOut' style={styles.iconS} onClick={() => props.sortByShirt()} href=''></i> <i className='fas fa-chevron-circle-down zoomIn' style={styles.iconD} onClick={() => props.sortByShirtD()} href=''></i></th>\n      <th style={styles.headD}>Country <i className='fas fa-chevron-circle-up zoomOut' style={styles.iconS} onClick={() => props.sortByCountry()} href=''></i> <i className='fas fa-chevron-circle-down zoomIn' style={styles.iconD} onClick={() => props.sortByCountryD()} href=''></i></th>\n      <th style={styles.headD}>Age <i className='fas fa-chevron-circle-up zoomOut' style={styles.iconS} onClick={() => props.sortByAge()} href=''></i> <i className='fas fa-chevron-circle-down zoomIn' style={styles.iconD} onClick={() => props.sortByAgeD()} href=''></i></th>\n    </tr>\n  );\n}\n\nexport default ListHead;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction List(props) {\n  return <table className='col-12'>{props.children}</table>;\n}\n\nexport default List;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container\">{props.children}<br/><br/></div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst styles = {\n  titleS : {\n    fontFamily: \"'Abel', sans-serif\",\n    fontWeight: 'bolder',\n    color: 'gold',\n    marginTop: '50px'\n  }\n}\n\nfunction Title(props) {\n  return <h1 className=\"title col-12\" style={styles.titleS}>{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst styles = {\n  buttonS: {\n    marginLeft: '20px',\n    marginTop: '0px',\n    fontWeight: 'bold'\n  },\n  searchS: {\n    color: 'gold',\n    fontWeight: 'bold',\n    fontSize: '20px'\n  },\n  formS: {\n    marginLeft: '80px'\n  }\n\n}\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  // console.log(props)\n  return (\n    <form className=\"search form-inline row\" style={styles.formS}>\n      <div className=\"form-group col-12\">\n        <label htmlFor=\"employee\" className='col-4' style={styles.searchS}>Search By Player Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"employee\"\n          list=\"employees\"\n          type=\"text\"\n          className=\"form-control col-4\"\n          placeholder=\"ex. Arturo Vidal or Arturo or Vidal\"\n          id=\"employee\"\n        />\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-outline-warning col-2\" style={styles.buttonS}>\n          Search \n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from 'react'\nimport \"./style.css\";\n\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  navbarStyle: {\n    // background: 'gold',\n    background: 'linear-gradient(to right, rgba(121, 16, 34, 1), rgba(255,0,0,0))'\n    \n  },\n  titleS: {\n    fontFamily: \"'Abel', sans-serif\",\n    fontWeight: 'bold',\n    color: 'gold',\n    fontSize: '25px',\n    marginTop: '-15px',\n    display: 'inline'\n  },\n  imagen: {\n    display: 'inline'\n  }\n}\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Navbar () {\n  return (\n    <nav style={styles.navbarStyle} className='navbar'>\n      <a style={styles.titleS} href='/'><img style={styles.imagen} src=\"http://icons.iconarchive.com/icons/giannis-zographos/spanish-football-club/32/FC-Barcelona-icon.png\" alt=\"Italian Trulli\"/> FC BARCELONA - Management</a>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport ListHead from \"./components/ListHead\";\nimport List from \"./components/List\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport SearchForm from \"./components/SearchForm\";\nimport Navbar from \"./components/Navbar\";\nimport players from \"./players.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    players,\n    search: \"\",\n    results: []\n  };\n\n  // Sort BY functions\n  // Name Ascending\n  sortByName = () => {\n    function compare (a, b) {\n      const bandA = a.fullName.toUpperCase();\n      const bandB = b.fullName.toUpperCase();\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n  // Name Descending\n  sortByNameD = () => {\n    function compare (a, b) {\n      const bandA = a.fullName.toUpperCase();\n      const bandB = b.fullName.toUpperCase();\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison * -1;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Shirt Number Ascending\n  sortByShirt = () => {\n    function compare (a, b) {\n      const bandA = a.shirtNumber;\n      const bandB = b.shirtNumber;\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Shirt Number Descending\n  sortByShirtD = () => {\n    function compare (a, b) {\n      const bandA = a.shirtNumber;\n      const bandB = b.shirtNumber;\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison * -1;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Age Ascending\n  sortByAge = () => {\n    function compare (a, b) {\n      const bandA = a.age;\n      const bandB = b.age;\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Age Descending\n  sortByAgeD = () => {\n    function compare (a, b) {\n      const bandA = a.age;\n      const bandB = b.age;\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison * -1;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Country Ascending\n  sortByCountry = () => {\n    function compare (a, b) {\n      const bandA = a.nationality.toUpperCase();\n      const bandB = b.nationality.toUpperCase();\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Country Descending\n  sortByCountryD = () => {\n    function compare (a, b) {\n      const bandA = a.nationality.toUpperCase();\n      const bandB = b.nationality.toUpperCase();\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison * -1;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Position Ascending\n  sortByPosition = () => {\n    function compare (a, b) {\n      const bandA = a.position.toUpperCase();\n      const bandB = b.position.toUpperCase();\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // Position Descending\n  sortByPositionD = () => {\n    function compare (a, b) {\n      const bandA = a.position.toUpperCase();\n      const bandB = b.position.toUpperCase();\n    \n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison * -1;\n    }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const players = this.state.players.sort(compare)\n    console.log(players.sort(compare));\n    // Set this.state.friends equal to the new friends array\n    this.setState({ players });\n  };\n\n  // --------------------------------------------- input ---------------------------------\n  handleInputChange = event => {\n    this.setState({ search: event.target.value, results: [] });\n    // console.log(this.state.search)\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const results = players.filter(friend => friend.fullName.toUpperCase() === this.state.search.toUpperCase() || friend.lastName.toUpperCase() === this.state.search.toUpperCase() || friend.name.toUpperCase() === this.state.search.toUpperCase() )\n    this.setState({ results: results });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    // console.log(this.state.results)\n    return (\n      <div>\n        <Navbar></Navbar>\n        <Wrapper>\n          <Title>FC Barcelona - Players List</Title>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            breeds={this.state.breeds}\n            search={this.state.search}\n          />\n          <br/>\n          <br/>\n        {\n          this.state.results.length > 0\n          ? <List>\n              <ListHead \n                sortByName={this.sortByName}\n                sortByNameD={this.sortByNameD}\n                sortByShirt={this.sortByShirt}\n                sortByShirtD={this.sortByShirtD}\n                sortByAge={this.sortByAge}\n                sortByAgeD={this.sortByAgeD}\n                sortByCountry={this.sortByCountry}\n                sortByCountryD={this.sortByCountryD}\n                sortByPosition={this.sortByPosition}\n                sortByPositionD={this.sortByPositionD}\n              />\n              {this.state.results.map(friend => (\n                <FriendCard\n                  name={friend.fullName}\n                  image={friend.imageURL}\n                  position={friend.position}\n                  country={friend.nationality}\n                  age={friend.age}\n                  shirtNumber={friend.shirtNumber}\n                />\n              ))}\n\n            </List> \n          : <List>\n              <ListHead \n                sortByName={this.sortByName}\n                sortByNameD={this.sortByNameD}\n                sortByShirt={this.sortByShirt}\n                sortByShirtD={this.sortByShirtD}\n                sortByAge={this.sortByAge}\n                sortByAgeD={this.sortByAgeD}\n                sortByCountry={this.sortByCountry}\n                sortByCountryD={this.sortByCountryD}\n                sortByPosition={this.sortByPosition}\n                sortByPositionD={this.sortByPositionD}\n              />\n              {this.state.players.map(friend => (\n                <FriendCard\n                  name={friend.fullName}\n                  image={friend.imageURL}\n                  position={friend.position}\n                  country={friend.nationality}\n                  age={friend.age}\n                  shirtNumber={friend.shirtNumber}\n                />\n              ))}\n            </List>\n        }  \n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}